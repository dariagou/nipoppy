.. Note: This page has to be in ReST format, not Markdown
.. because otherwise there are issues with linking between the schemas

File schemas
============

This page contains auto-generated :term:`JSON` schemas [#f1]_ for the text files used or generated by Nipoppy.

.. _config-schema:

Global configuration file
-------------------------

.. include:: schema_howto.md
    :parser: myst_parser.sphinx_

.. admonition:: Info

    ``PROC_PIPELINES`` and ``BIDS`` are nested objects (i.e. dictionaries),
    where the final "leaf" values are ``PipelineConfig`` objects. All keys should
    be strings.

    ``PROC_PIPELINES`` expects two levels of nesting: one for the **pipeline name**,
    and the other for the **pipeline version**.

    ``BIDS`` expects three levels of nesting: one for the **pipeline name**, one for
    the **pipeline version**, and the last one for the **name of the** :term:`BIDS` **conversion step**.

    See the :ref:`Quickstart guide <customizing-config>` for an example config file
    that shows these nested structures.

Below is the schema used for the global configuration :term:`JSON` file.

.. jsonschema:: config.json

.. _manifest-schema:

Manifest file
-------------

.. include:: schema_howto.md
    :parser: myst_parser.sphinx_

Here is the schema used for each row in the manifest file:

.. jsonschema:: manifest.json
    :lift_title: False

Doughnut file
-------------

.. include:: schema_howto.md
    :parser: myst_parser.sphinx_

Here is the schema used for each row in the doughnut file:

.. jsonschema:: doughnut.json
    :lift_title: False

Bagel file
----------

.. include:: schema_howto.md
    :parser: myst_parser.sphinx_

Here is the schema used for each row in the bagel file:

.. jsonschema:: bagel.json
    :lift_title: False

.. [#f1] Created with `sphinx-jsonschema <https://github.com/lnoor/sphinx-jsonschema>`_
